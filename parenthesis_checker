#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct stack{
	
	int size;
	int top;
	char *arr;
	
};

int isEmpty(struct stack* s){
	
	if(s->top==-1){
		return 1;
	}
	else{
		return 0;
	}
	
}// is empty.

int isFull(struct stack* s){
	
	if(s->top==s->size-1){
		return 1;
	}
	else{
		return 0;
	}
}// is full.

void push(struct stack* s,char ch){
	
	if(isFull(s)){
		printf("Stack is Full.\n");
	}
	else{
		
		s->top++;
		s->arr[s->top]=ch;
		
	}
	
}// push.

void pop(struct stack* s){
	
	if(isEmpty(s)){
		printf("Stack is Empty.\n");
	}
	else{
		
		s->top--;
		
	}
	
}// pop.



int main(){

struct stack s;

int i=0;	
char str[50];
scanf("%s",str);
//printf("%s",str);

s.size=strlen(str);

s.top=-1;

s.arr=(char*)malloc(s.size*sizeof(char));

while(str[i]!='\0'){
	
	if(str[i]=='('){
		push(&s,'(');// pushing element in to the stack.
	}
	else if(str[i]==')'){
		
		if(isEmpty(&s))// checking stack is empty or not.
		{
		printf("Unbalance\n");	
		return;
		}
		else{
		pop(&s);// poping the element from stack.
	 	}
	}
	
	 if(i==strlen(str)-1)// checking last index is empty or not.
	 {
		if(isEmpty(&s)){
			printf("Balance.");
		}
		else{
			printf("Unbalance.");
		}
	}
	i++;	
}

	return 0;
}
