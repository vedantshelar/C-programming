#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct stack{
	
	int size;
	int top;
	char * arr;
	
};

int isEmpty(struct stack* s){
	
	if(s->top==-1){
		return 1;
	}
	else{
		return 0;
	}
	
}// is empty.

int isFull(struct stack* s){
	
	if(s->top==s->size-1){
		return 1;
	}
	else{
		return 0;
	}
	
}// is full.

void push(struct stack* s,char ch){
char x;	
	if(isFull(s)){
		printf("Stack is Full.\n");
	}
	else{
		
		s->top++;
		s->arr[s->top]=ch;
		
	}
}// push

void pop(struct stack* s){
	
	if(isEmpty(s)){
		printf("Stack is Empty.\n");
	}
	else{
		
		s->top--;
		
	}
	
}// pop.

int main(){
	
struct stack s;
int i=0;
char ch[40];
printf("Enter :");
scanf("%s",ch);

s.size=strlen(ch);

s.top=-1;

s.arr=(char*)malloc(s.size*sizeof(char));

while(ch[i]!='\0'){
	
	if(ch[i]=='{' || ch[i]=='[' || ch[i]=='(')
	{
		push(&s,ch[i]);// pushing character in stack.
	}
	else if(ch[i]=='}' || ch[i]==']' || ch[i]==')'){
		
		if(isEmpty(&s)){
			printf("Not Balace.");
		break;
		}
		else if(ch[i]==')' && s.arr[s.top]=='('){
			pop(&s);//poping character from stack.
		}
		else if(ch[i]==']' && s.arr[s.top]=='['){
			pop(&s);//poping character from stack.
		}
		else if(ch[i]=='}' && s.arr[s.top]=='{'){
			pop(&s);//poping character from stack.
		}
		else{
				printf("Not Balance.");
				break;
			}
	}
	if(i==strlen(ch)-1){
		if(isEmpty(&s)){// if stack is empty at last index then its balance.
			printf("Balance.");
		}
		else{
			printf("Not Balance.");
		}
	}
	
	i++;
}

	return 0;
}
